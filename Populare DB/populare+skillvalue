
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Grozavu
 */
public class Main {

    private static void getFiles(final File folder) throws IOException, SAXException, ParserConfigurationException, SQLException {
        int numar = 100;
        for (final File fileEntry : folder.listFiles()) {
            if (fileEntry.isDirectory()) {
                getFiles(fileEntry);
            } else {
                String path = folder.toString();
                path += "\\" + fileEntry.getName();
                System.out.println(path);
                numar++;
                System.out.println(numar);
                populate(path, numar);
            }
        }
    }

    private static int valoare(String skill) {
        if (skill.toLowerCase().contains("java")) {
            return 20;
        }
        if (skill.toLowerCase().contains(" c ")|skill.toLowerCase().contains("c/")) {
            return 19;
        }
        if (skill.toLowerCase().contains("c++")) {
            return 18;
        }
        if (skill.toLowerCase().contains("c#")) {
            return 17;
        }
        if (skill.toLowerCase().contains("python")) {
            return 16;
        }
        if (skill.toLowerCase().contains("php")) {
            return 15;
        }
        if (skill.toLowerCase().contains("javascript")) {
            return 14;
        }
        if (skill.toLowerCase().contains(".net")) {
            return 13;
        }
        if (skill.toLowerCase().contains("pascal")) {
            return 12;
        }
        if (skill.toLowerCase().contains("perl")) {
            return 11;
        }
        if (skill.toLowerCase().contains("ruby")) {
            return 10;
        }
        if (skill.toLowerCase().contains("swift")) {
            return 9;
        }
        if (skill.toLowerCase().contains("assembly")) {
            return 8;
        }
        if (skill.toLowerCase().contains("go ")) {
            return 7;
        }
        if (skill.toLowerCase().contains(" r ")) {
            return 6;
        }
        if (skill.toLowerCase().contains("visual basic")) {
            return 5;
        }
        if (skill.toLowerCase().contains("matlab")) {
            return 4;
        }
        if (skill.toLowerCase().contains("pl/sql")) {
            return 3;
        }
        if (skill.toLowerCase().contains("objective-c")) {
            return 2;
        }
        if (skill.toLowerCase().contains("scratch")) {
            return 1;
        }
        return 0;
    }

    private static void populate(String path, int numar) throws SAXException, ParserConfigurationException, SQLException {
        String name = CV.getName(path);
        String email = CV.getEmail(path);
        List<WorkExperience> workExperience = CV.getWorkExperience(path);

        CV.getStudiesExperience(path);
        List<String> skills = CV.getSkills(path);
        Connection con = DB.GetConn();
        int var = 0;
        PreparedStatement pstmt;
        pstmt = con.prepareStatement("insert into curriculumvitae (id,name,email) values (?,?,?)");

        pstmt.setInt(1, numar);
        pstmt.setString(2, name);
        pstmt.setString(3, email);
        pstmt.executeUpdate();
        pstmt.close();

        for (int i = 0; i < workExperience.size(); i++) {
            pstmt = con.prepareStatement("insert into experience (cv_id,job_title,experience_years) values (?,?,?)");
            pstmt.setInt(1, numar);
            pstmt.setString(2, workExperience.get(i).jobTitle);
            pstmt.setInt(3, workExperience.get(i).experienceYears);
            pstmt.executeUpdate();
            var += workExperience.get(i).experienceYears;
            pstmt.close();
        }

        pstmt.close();
        pstmt = con.prepareStatement("update curriculumvitae set experience_years = (?) where id =10");

        pstmt.setInt(1, var);
        pstmt.executeUpdate();
        pstmt.close();

        for (int i = 0; i < skills.size(); i++) {
            pstmt = con.prepareStatement("insert into softskills (cv_id,skill,valoare) values (?,?,?)");
            pstmt.setInt(1, numar);
            pstmt.setString(2, skills.get(i));
            pstmt.setInt(3, valoare(skills.get(i)));
            pstmt.executeUpdate();
            pstmt.close();
        }

        pstmt.close();
    }

    public static void main(final String[] args) throws IOException, SAXException, ParserConfigurationException, SQLException {
        final File folder = new File("C:\\Users\\Grozavu\\Desktop\\xml-uri");
        getFiles(folder);
    }
}
